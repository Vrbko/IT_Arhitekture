version: '3.8'

services:
  zaloga:
    build:
      context: Storitev_Zaloga/. # Builds the Dockerfile in the current directory
    ports:
      - "3000:3000" # Expose port 5000 on the host machine
    environment:
      - MONGO_URI=${MONGO_URI}  # Using MONGO_URI from the .env file
    networks:
      - app-network

  uporabniki:
    build:
      context: Storitev_Uporabniki/.
    ports:
      - "50051:50051"
    networks:
      - app-network


  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379" # Expose Redis on port 6379
    volumes:
      - redis-data:/data
    networks:
      - app-network
    depends_on:
      - mysql  # Ensure Redis is up before PHP starts
    

  php:
    build:
      context: Storitev_Narocanje/.
    container_name: php-app
    ports:
      - "8000:80"  # Expose PHP app on port 8000
    depends_on:
      - redis  # Ensure Redis is up before PHP starts
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: vrbko  # Change this to a secure password
      MYSQL_DATABASE: autodeli  # This creates the initial 'autodeli' database
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"  # Expose MySQL on port 3306
    networks:
      - app-network



  home:
    build:
      context: UporabnskiVmesnik/home/.
    ports:
      - "2999:2999"
    restart: always
    networks:
      - app-network

  pdp:
    build:
      context: UporabnskiVmesnik/pdp/.
    ports:
      - "3001:3001"
    restart: always
    networks:
      - app-network

  cart:
    build:
      context: UporabnskiVmesnik/cart/.
    ports:
      - "3002:3002"
    restart: always
    networks:
      - app-network
  
  addtocart:
    build:
      context: UporabnskiVmesnik/addtocart/.
    ports:
      - "3003:3003"
    restart: always
    networks:
      - app-network

  server:
    build:
      context: UporabnskiVmesnik/server/.
    ports:
      - "8080:8080"
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local